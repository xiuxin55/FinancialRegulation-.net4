//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace FundsRegulatoryClient.FunSrv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FunSrvSoap", Namespace="http://tempuri.org/")]
    public partial class FunSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getFunDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFunOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFunOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDutyFunOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFunOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FunSrv() {
            this.Url = global::FundsRegulatoryClient.Properties.Settings.Default.HSIS_Client_FunSrv_FunSrv;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getFunDataCompletedEventHandler getFunDataCompleted;
        
        /// <remarks/>
        public event AddFunCompletedEventHandler AddFunCompleted;
        
        /// <remarks/>
        public event DeleteFunCompletedEventHandler DeleteFunCompleted;
        
        /// <remarks/>
        public event GetDutyFunCompletedEventHandler GetDutyFunCompleted;
        
        /// <remarks/>
        public event SetFunCompletedEventHandler SetFunCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFunData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFunData() {
            object[] results = this.Invoke("getFunData", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFunDataAsync() {
            this.getFunDataAsync(null);
        }
        
        /// <remarks/>
        public void getFunDataAsync(object userState) {
            if ((this.getFunDataOperationCompleted == null)) {
                this.getFunDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFunDataOperationCompleted);
            }
            this.InvokeAsync("getFunData", new object[0], this.getFunDataOperationCompleted, userState);
        }
        
        private void OngetFunDataOperationCompleted(object arg) {
            if ((this.getFunDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFunDataCompleted(this, new getFunDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddFun(System.Data.DataSet ds) {
            object[] results = this.Invoke("AddFun", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddFunAsync(System.Data.DataSet ds) {
            this.AddFunAsync(ds, null);
        }
        
        /// <remarks/>
        public void AddFunAsync(System.Data.DataSet ds, object userState) {
            if ((this.AddFunOperationCompleted == null)) {
                this.AddFunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFunOperationCompleted);
            }
            this.InvokeAsync("AddFun", new object[] {
                        ds}, this.AddFunOperationCompleted, userState);
        }
        
        private void OnAddFunOperationCompleted(object arg) {
            if ((this.AddFunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFunCompleted(this, new AddFunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFun(string id) {
            object[] results = this.Invoke("DeleteFun", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFunAsync(string id) {
            this.DeleteFunAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteFunAsync(string id, object userState) {
            if ((this.DeleteFunOperationCompleted == null)) {
                this.DeleteFunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFunOperationCompleted);
            }
            this.InvokeAsync("DeleteFun", new object[] {
                        id}, this.DeleteFunOperationCompleted, userState);
        }
        
        private void OnDeleteFunOperationCompleted(object arg) {
            if ((this.DeleteFunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFunCompleted(this, new DeleteFunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDutyFun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDutyFun(string dutyid) {
            object[] results = this.Invoke("GetDutyFun", new object[] {
                        dutyid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDutyFunAsync(string dutyid) {
            this.GetDutyFunAsync(dutyid, null);
        }
        
        /// <remarks/>
        public void GetDutyFunAsync(string dutyid, object userState) {
            if ((this.GetDutyFunOperationCompleted == null)) {
                this.GetDutyFunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDutyFunOperationCompleted);
            }
            this.InvokeAsync("GetDutyFun", new object[] {
                        dutyid}, this.GetDutyFunOperationCompleted, userState);
        }
        
        private void OnGetDutyFunOperationCompleted(object arg) {
            if ((this.GetDutyFunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDutyFunCompleted(this, new GetDutyFunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetFun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetFun(string dutyid, string[] funids) {
            object[] results = this.Invoke("SetFun", new object[] {
                        dutyid,
                        funids});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetFunAsync(string dutyid, string[] funids) {
            this.SetFunAsync(dutyid, funids, null);
        }
        
        /// <remarks/>
        public void SetFunAsync(string dutyid, string[] funids, object userState) {
            if ((this.SetFunOperationCompleted == null)) {
                this.SetFunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFunOperationCompleted);
            }
            this.InvokeAsync("SetFun", new object[] {
                        dutyid,
                        funids}, this.SetFunOperationCompleted, userState);
        }
        
        private void OnSetFunOperationCompleted(object arg) {
            if ((this.SetFunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFunCompleted(this, new SetFunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getFunDataCompletedEventHandler(object sender, getFunDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFunDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFunDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddFunCompletedEventHandler(object sender, AddFunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteFunCompletedEventHandler(object sender, DeleteFunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDutyFunCompletedEventHandler(object sender, GetDutyFunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDutyFunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDutyFunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetFunCompletedEventHandler(object sender, SetFunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591